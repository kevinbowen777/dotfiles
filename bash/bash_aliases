### ======================================================================= ###
#   Section 1: Header
### ======================================================================= ###
#{{{
# Personal $HOME/.bash_aliases file
# Author: Kevin Bowen <kevin.bowen@gmail.com>
# Version: 0.1
# Source : http://www.github.com/kevinbowen777/dotfiles.git
# Last modified: 20240804
# ~/.bash_aliases: called by ~/.bashrc
# 
#  Create symlink in ~/$HOME 
#    ln -s ~/dotfiles/bash/bash_aliases ~/.bash_aliases
# 
# 
#                               Sections
#
#  1)    Sourced aliases            (See .bash_aliases)
#  2)    Workstation aliases        (See .bash_aliases)
#  3)    Remote Server aliases      (See .bash_aliases)
#  4)    Custom Functions(See .bash_aliases)

### ======================================================================= ###
#   Section 1: Sourced aliases and alias definitions.
### ======================================================================= ###

# enable color support of ls 
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dir_colors && eval "$(dircolors -b ~/.dir_colors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

#### Aliases  
alias act="source .venv/bin/activate"
alias bat='bat --theme=Dracula'
alias batp='bat -p --theme=Dracula'
alias bashed='vi ~/.bashrc; source ~/.bashrc && source $HOME/.bashrc && echo "bashrc sourced  --ok."'
alias bestp='cd /home/kbowen/docs/tech/best_practices'
alias cdoc='cdoc.sh'
alias cl='clear -x'
alias deact='deactivate'
alias delenv='rm -rf .venv'
alias dict='sdcv'
# alias dictw='curl dict://dict.org/d:$1'
alias djstart='cd ~/dev/python/repos/django/django-start'
alias djtree='tree -I "staticfiles|templates|__pycache__|htmlcov|static|media|docs|migrations|images"'
alias docs='cd /home/kbowen/docs'
alias docu='docker compose up'
alias docd='docker compose down'
alias docnox='docker compose exec web nox'
alias docsh='cd /home/kbowen/docs'
alias docstat='ps -ef | grep docker'
alias docub='docker compose up --build'
alias docup='docker compose exec web coverage run -m pytest'
alias docur='docker compose exec web coverage report'
alias docuh='docker compose exec web coverage html'
alias dot='cd /home/kbowen/dotfiles'
alias dotf='cd ~/dotfiles'
alias drun='./drun'
alias ea='vi ~/.bash_aliases; source $HOME/.bash_aliases && echo "aliases sourced  --ok."'
alias ed='ed -p"â˜… > " --verbose'
alias egrep='egrep --color=auto'
alias etym='etym.py'
alias fgrep='fgrep --color=auto'
alias ghic='gh issue close $1'  # Requires one input
alias ghicb='gh issue create --label bug --assignee @me'
alias ghicd='gh issue create --label documentation --assignee @me'
alias ghice='gh issue create --label enhancement --assignee @me'
alias ghict='gh issue create --label testing --assignee @me'
alias ghie='gh issue edit $1'  #Requires one input
alias ghil='gh issue list --limit 100'
alias gits='git status'
alias gita='git add .'
alias gitl='git log'
alias gitp='git push all master;git push origin master'
alias gitpom='git push origin master'
alias grep='grep --color=auto'
alias hist='history | grep $1' #Requires one input
alias howto='cd /home/kbowen/docs/tech/howto'
alias info='pinfo'
alias ip='ip -color'
alias ipy='ipython3'
alias l='ls -CF'
alias la='ls -aF'
alias lh='ls -1 --hyperlink=always'
alias ll='ls -lF'
alias ls='ls --color -h --group-directories-first'
# alias ls='ls --color=auto'
alias lsql='cd ~/dev/projects/learning/sql/'
alias matrix='gomuks'
alias meminfo='free -m -l -t'
alias mi='~/bin/map_it.py'
alias mpause='audtool --playback-pause'
alias mplay='audtool --playback-play'
alias mstop='audtool --playback-stop'
alias mlb='mlbscores.py'
alias mlbwest='mlb -s | head -n21 | tail -n6'
alias ms='~/bin/movie_search.py'
alias newenv="python3.12 -m venv --prompt . .venv && .venv/bin/pip install -U pip setuptools wheel"
alias odin='cd ~/dev/projects/learning/odin-project/'
alias pd='perldoc'
alias pathdup='echo "$PATH" | tr : "\n" | sort | uniq -d'
alias perdoc='perldoc'
alias pgstat='ps -ef | grep postgres'
alias pgstart='sudo systemctl start postgresql.service'
alias pgstop='sudo systemctl stop postgresql.service'
alias pip="python3 -m pip"
alias ports='netstat -tulanp'
alias proj='cd ~/dev/projects'
alias psc='ps xawf -eo pid,user,cgroup,args'
alias psmem='ps auxf | sort -nr -k -4'
alias psmem10='ps auxf | sort -nr -k -4 | head -10'
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'
alias pyenv_list='pyenv install --list | grep -E " 3\.([89]|1[0-4])"'
# alias pyenv_list='pyenv install --list | grep " 3\.\([89]\|1[0-4]\)"'
alias pymrun='python manage.py runserver'
alias pymrun+='python manage.py runserver_plus --cert-file cert.crt'
alias pydj='cd ~/dev/python/repos/django'
alias pyr='cd ~/dev/python/repos'
alias pysand='cd ~/dev/python/sandbox'
alias pyth='cd ~/dev/python'
alias pytmp='cd ~/dev/python/tmp'
alias renlow='rename 'y/A-Z/a-z/''
alias renup='rename 'y/a-z/A-Z/''
alias prsand='cd ~/dev/projects/sandbox'
alias rbsand='cd ~/dev/ruby/sandbox'
alias run='./run'
alias setkb='setxkbmap -option caps:escape'
alias sn='cd ~/.notes && ./sn.sh'
alias sourceb='source ~/.bashrc && echo bashrc sourced --ok'
alias sucharm='sudo /opt/pycharm/bin/pycharm.sh'
alias sug='sudo apt upgrade'
alias sup='sudo apt update'
alias sur='sudo apt autoremove'
alias toolbox='cd ~/dev/projects/repos/toolbox'
alias tools='cd ~/dev/projects/repos/toolbox'
alias trace='traceroute'
alias ts='~/bin/torrent_search.py'
alias venv='cd ~/dev/python/venvs'
alias venvs='cd ~/dev/python/venvs'
alias vi='/usr/bin/vim'
alias vimwik='vi ~/docs/vimwiki/index.md'
alias ws='~/bin/wiki_search.py'
alias xdis='xfce4-display-settings'
alias xfdev='cd ~/dev/xfce'
# alias xfrepo='cd ~/dev/xfce/repos/xfce/xfce-repocapp'
alias xfrepo='cd ~/dev/xfce/gitlab.xfce.org'

### ======================================================================= ###
#   Section 2: Workstation aliases
### ======================================================================= ###

# aliases for remote boxes

### ======================================================================= ###
#   Section 3: Hardware control aliases(Control cd/dvd/scanners/audio/etc) 
### ======================================================================= ###

setxkbmap -option caps:escape
# volume controls
alias mu1='amixer sset Master 1%+'
alias md1='amixer sset Master 1%-'
alias mu5='amixer sset Master 5%+'
alias md5='amixer sset Master 5%-'
alias mu='amixer set Master 10%+'
alias md='amixer sset Master 10%-'

### ======================================================================= ###
#   Section 4: Custom Functions (More of a function than an alias.. here) 
### ======================================================================= ###

edwin () {
    scheme -eval "(edit 'console)"
}
docstart () {
    sudo systemctl start containerd
    echo "containerd service started"
    sudo systemctl start docker.service
    echo "docker service started. Good morning, sunshine!"
}
docstop () {
    sudo systemctl stop docker.service
    echo "docker service stopped"
    sudo systemctl stop containerd
    echo "containerd service stopped. Good night, moon!"
}
hidden_python () {
    # https://til.simonwillison.net/python/stdlib-cli-tools
    PY_VERSION=$(python -V | awk '{print $2}')
    PY_MAJOR=${PY_VERSION::-5}
    cd ~/.pyenv/versions/$PY_VERSION/lib/python$PY_MAJOR
    rg 'if __name__ =' -l | grep -v \
        -e test \
        -e tests \
        -e idlelib \
        -e site-packages \
        -e turtledemo \
        | sort
}
mkcd () {
    mkdir -p -- "$1" && cd -P -- "$1"
}
pybaseinstall () {
    python -m pip install --upgrade pip
    python -m pip install pipx
    source ~/.bashrc
}
pipxpackageinstall () {
    pipx install argcomplete
    pipx install frogmouth
    pipx install glances
    pipx install ipython
    pipx inject ipython friendly colorama pickleshare
    pipx install pdm
    pipx install pip-audit
    pipx install pip-check
    # pipx install pispy
    pipx install pispy-client --python python3.12
    pipx install poetry
    pipx install pydf
    pipx install pyright
    pipx install rich --include-deps
    pipx install thonny
    pipx install tldr

}

pipx-outdated() {
    # See: https://github.com/pypa/pipx/issues/149#issuecomment-23427482060
	echo "OUTDATED PACKAGES:"
	while read -sr pyPkgName pyPkgVersion; do
		local pypi_latest="$(curl -sS "https://pypi.org/pypi/${pyPkgName}/json" | jq --raw-output '.info.version')"
		[ "$pyPkgVersion" != "$pypi_latest" ] && printf "%s\n\tCurrent: %s\tLatest: %s\n" "$pyPkgName" "$pyPkgVersion" "$pypi_latest"
	done < <( pipx list | grep -o 'package.*,' | tr -d ',' | cut -d ' ' -f 2- )
}

chkfont () {
    for family in serif sans-serif monospace Arial Helvetica Verdana "Times New Roman" "Courier New"; do
  echo -n "$family: "
  fc-match "$family"
done
}

dictw () {
    echo
    def="$(curl -s dict://dict.org/define:$1: | grep -vP '^\d\d\d')";
    if [ "$def" = "" ];
    then
        echo No definition;
    else
        echo "$def" | bat -p --theme Dracula;
    fi
}
