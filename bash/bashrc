### ==================================================================== ###
#   Section 1: Header
### ==================================================================== ###
#{{{
# Personal $HOME/.bashrc file
# Author: Kevin Bowen <kevin.bowen@gmail.com>
# Version: 2.3
# Source : http://www.github.com/kevinbowen777
# Last modified: Wed June 27 2018
# ~/.bashrc: executed by bash(1) for non-login shells.
# 
# To pick up the latest default .bashrc content,
# look in /etc/skel/.bashrc
# 
#                               Sections
#
#  1)    Header                     (This section)
#  2)    Exports                    (Set history, paths, editors, colors, etc,) 
#  3)    Sourced aliases            (Shortcuts)
#  4)    Workstation aliases        (SSH to local machines) 
#  5)    Remote Server aliases      (SSH to remote servers) 
#  6)    Script aliases             (Links to some bashscripts) 
#  7)    Hardware control aliases   (Control cd/dvd/scanners/audio/etc) 
#  8)    Special functions          (More of a function than an alias) 
#
#
### =================================================== ###
# If not running interactively, don't do anything
[ -z "$PS1" ] && return
#}}}
### ==================================================================== ###
#   Section 2: Exports (Set history, paths, editors, colors) 
### ==================================================================== ###
#{{{
set -o vi
# append to the history file, don't overwrite it
shopt -s histappend
shopt -s checkwinsize
MYVIMRC=~/.vimrc

# don't put duplicate lines or lines starting with space in the history.
unset HISTFILESIZE
HISTCONTROL=ignoredups:erasedups
HISTSIZE=1000   # History size for current shell only
HISTFILESIZE=1000
export HISTSIZE
export HISTCONTROL=ignoredups:erasedups
export HISTTIMEFORMAT="$(echo -e ${BCyan})[%d/%m %H:%M:%S]$(echo -e ${NC}) "
export PROMPT_COMMAND="history -a; history -c; history -r;
$PROMPT_COMMAND"
#
export LESS_TERMCAP_mb=$(printf '\e[01;31m') # enter blinking mode - red
export LESS_TERMCAP_md=$(printf '\e[01;35m') # enter double-bright mode
export LESS_TERMCAP_me=$(printf '\e[0m') # turn off all appearance modes
export LESS_TERMCAP_se=$(printf '\e[0m') # leave standout mode    
export LESS_TERMCAP_so=$(printf '\e[01;33m') # enter standout mode -
export LESS_TERMCAP_ue=$(printf '\e[0m') # leave underline mode
export LESS_TERMCAP_us=$(printf '\e[04;36m') # enter underline mode
#
PATH="${PATH}:/home/kbowen/anaconda/bin:"; export PATH;

# Define a few colors
BLACK='\e[0;30m'
BLUE='\e[0;34m'
GREEN='\e[0;32m'
CYAN='\e[0;36m'
RED='\e[0;31m'
PURPLE='\e[0;35m'
BROWN='\e[0;33m'
LIGHTGRAY='\e[0;37m'
DARKGRAY='\e[1;30m'
LIGHTBLUE='\e[1;34m'
LIGHTGREEN='\e[1;32m'
LIGHTCYAN='\e[1;36m'
LIGHTRED='\e[1;31m'
LIGHTPURPLE='\e[1;35m'
YELLOW='\e[1;33m'
WHITE='\e[1;37m'
NC='\e[0m'              # No Color

# Workaround for suppress d-bus spurious errors: Launchpad bug #1193236
export NO_AT_BRIDGE=1
#}}}
### ==================================================================== ###
#   Section 3: Sourced aliases and alias definitions.
### ==================================================================== ###
#{{{
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi
# enable color support of ls 
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi
# uncomment following three lines to enable powerline for bash
#if [ -f /usr/local/lib/python2.7/dist-packages/powerline/bindings/bash/powerline.sh ]; then
#    source /usr/local/lib/python2.7/dist-packages/powerline/bindings/bash/powerline.sh
#fi

#### Aliases  
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias ed='ed -p"â˜… > "'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias hist='history | grep $1' #Requires one input
alias gvim='gvim -geometry 97x46+513+85'
alias info='pinfo'
alias ip='ip -color'

#}}}
### ==================================================================== ###
#   Section 4: Workstation aliases
### ==================================================================== ###
#{{{
# alias for CentOS spacewalk VM
alias space='ssh  -X kbowen@spacewalk' 
#}}}
### ==================================================================== ###
#   Section 5: Hardware control aliases(Control cd/dvd/scanners/audio/etc) 
### ==================================================================== ###
#{{{
setxkbmap -option caps:escape
# volume controla
alias mu1='amixer sset Master 1%+'
alias md1='amixer sset Master 1%-'
alias mu5='amixer sset Master 5%+'
alias md5='amixer sset Master 5%-'
alias mu='amixer set Master 10%+'
alias md='amixer sset Master 10%-'
#
#}}}
### ==================================================================== ###
#   Section 6: Special functions (More of a function than an alias.. here) 
### ==================================================================== ###
#{{{

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac
#
if [ -n "$DISPLAY" -a "$TERM" == "xterm" ]; then
        export TERM=xterm-256color
fi

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|xfce4*|rxvt*)
    #PS1="\[\e]0;\u@\h: \w\a\]$PS1"
    #PS1='\[\033[01;35m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[01;37m\] $ '
    PS1='\[\033[01;92m\]\u@\h\[\033[91m\]:\[\033[01;96m\]\w\[\033[01;92m\] $ '
    ;;
*)
    ;;
esac

force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	color_prompt=yes
    else
	color_prompt=
    fi
fi

unset color_prompt force_color_prompt
#
# changes prompt when remotely ssh into a client
#
if [ -n "$SSH_CLIENT" ]; then text=" [ssh-session]"
# export PS1='\[\e[1;31m\]\u@\h:\w${text}$\[\e[m\] '
fi
# 
#if [ -z "$SSH_AUTH_SOCK" ] ; then
#      eval `ssh-agent -s`
#        ssh-add
#fi
# check ssh-agent and add keys. Hopefully only prompting once for password
if [ ! -S ~/.ssh/ssh_auth_sock ]; then
      eval `ssh-agent`
        ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
fi
export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
ssh-add -l > /dev/null || ssh-add
#}}}
###
