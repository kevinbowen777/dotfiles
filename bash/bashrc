### ======================================================================= ###
#
# Personal $HOME/.bashrc file
# Author: Kevin Bowen <kevin.bowen@gmail.com>
# Version: 2.0
#
# Last modified: Tues Feb 28 01:23:00 PST 2013
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# 
# This file is read (normally) by interactive shells only.
# This is the place to define your aliases, funtions, and
# other interactive features like your prompt.
#
# To pick up the latest recommended .bashrc content,
# look in /etc/defaults/etc/skel/.bashrc
# 
# The majority of the code here assumes that you are on a GNU
# system. For additional information, see:
# http://bashscripts.org/forum/viewtopic.php?f=28&t=174 
# http://tldp.org/LDP/abs/index.html
# http://www.caliban.org/bash
# http://shelldorado.com/scripts/categories.html
# http://www.dotfiles.org/
#
#		A large portion of this script was initially stolen from:
#			http://tldp.org/LDP/abs/html/sample-bashrc.html
#   
#                               Sections
#
#  1)    Header                     (This section)
#  2)    Exports                    (Set history, paths, editors, colors, etc,) 
#  3)    Sourced aliases            (Shortcuts)
#  4)    Workstation aliases        (SSH to local machines) 
#  5)    Remote Server aliases      (SSH to remote servers) 
#  6)    Script aliases             (Links to some bashscripts) 
#  7)    Hardware control aliases   (Control cd/dvd/scanners/audio/etc) 
#  8)    Modified commads           (Linux commands with special flags) 
#  9)    Chmod aliases              (Makes changing permissions faster) 
#  10)   Aliases for GUI programs   (Start firefox, etc from command line) 
#  11)   Aliases for xterm          (Open xterm with special settings) 
#  12)   Aliases for Lynx           (Open lynx with urls) 
#  13)   Unused aliases             (Aliases that aren't in use on the system)
#  14)   Special functions          (More of a function than an alias.. here) 
#  15)   Notes                      (that should be self explanatory  ) 
#  16)   Welcome Screen             (Code to display as bash starts up)
#
#
### ======================================================================= ###

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

#
#   Section 2: Exports
### ======================================================================= ###


# append to the history file, don't overwrite it
shopt -s histappend

# don't put duplicate lines or lines starting with space in the history.
unset HISTFILESIZE
HISTCONTROL=erasedups:ignoreboth
HISTSIZE=3000   # History size for current shell only
HISTFILESIZE=2000
export HISTSIZE
export HISTCONTROL=erasedups:ignoreboth
export HISTTIMEFORMAT="$(echo -e ${BCyan})[%d/%m %H:%M:%S]$(echo -e ${NC}) "

#
#   Section 3: Sourced aliases and alias definitions.
### ======================================================================= ###

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi
# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"


#### Aliases  
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias scripts='cd /home/kbowen/docs/tech/scripts'
alias hist='history | grep $1' #Requires one input
alias doct='cd /home/kbowen/docs/tech'
alias docto='cd /home/kbowen/Downloads/torrents'
alias docts='cd /home/kbowen/Downloads/software'
alias algo='cd ~/algs4'
alias g='vim --remote-silent'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

MYVIMRC=~/.vimrc

# Define a few Color's
BLACK='\e[0;30m'
BLUE='\e[0;34m'
GREEN='\e[0;32m'
CYAN='\e[0;36m'
RED='\e[0;31m'
PURPLE='\e[0;35m'
BROWN='\e[0;33m'
LIGHTGRAY='\e[0;37m'
DARKGRAY='\e[1;30m'
LIGHTBLUE='\e[1;34m'
LIGHTGREEN='\e[1;32m'
LIGHTCYAN='\e[1;36m'
LIGHTRED='\e[1;31m'
LIGHTPURPLE='\e[1;35m'
YELLOW='\e[1;33m'
WHITE='\e[1;37m'
NC='\e[0m'              # No Color
# Sample Command using color: echo -e "${CYAN}This is BASH ${RED}${BASH_VERSION%.*}${CYAN} - DISPLAY on ${RED}$DISPLAY${NC}\n"
#
#   Section 4: Workstation aliases
### ======================================================================= ###
alias abu='ssh  -X kbowen@abulafia' 
#
#   Section 5: Remote Server aliases
### ======================================================================= ###


# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize


# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac



# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac
#
#   Section 13: Unused aliases
### ======================================================================  ###
# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt
#
# changes prompt when remotely ssh into a client
#
#if [ -n "$SSH_CLIENT" ]; then text=" ssh"

#fi

#export PS1='\[\e[0;31m\]\u@\h:\w${text}$\[\e[m\] '

#
#
#   Section 14: Special functions
### ======================================================================  ###


#
#   Section 15: Notes
### ======================================================================  ###
