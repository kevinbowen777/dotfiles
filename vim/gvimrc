"{{{ ----------------------------------------------------------------------- "
"
" Name: gvimrc 
" Purpose: Set gvim configuration
" Requirements:
"
" Version: 1.17
" Author: Kevin Bowen kevin.bowen@gmail.com
" 
" Updated: 20190815
"
" -------------------------------------------------------------------------- "
"}}}

set nocompatible
set modelines=0
set nomodeline
" Don't persist options and mappings because it can corrupt sessions.
set sessionoptions-=options
set undofile

" Switch syntax highlighting on
syntax on
let python_highlight_all=1
colorscheme adaryn 
set encoding=utf-8
set t_Co=256

" Enable file type detection and do language-dependent indenting.
filetype off              " force reloading *after* pathogen loaded
execute pathogen#infect()
call pathogen#helptags()
filetype plugin indent on " enable detection, plugins, and indentation in one step

" Appearance
set relativenumber
set laststatus=2
set wrap
set linebreak
set textwidth=72
set colorcolumn=80

" Behavior
set backspace=indent,eol,start
set history=50
set hlsearch
set incsearch
set fileformat=unix

" Indentation
set autoindent
set tabstop=4
set shiftwidth=4
set softtabstop=4
set noexpandtab

" Folding
set foldmethod=marker
nnoremap <space> za

" Tab-completion in command-line mode
set wildmode=full
set wildmenu

" Disable the arrow keys in normal and insert mode. Leave for visual mode.
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

" Temp file locations. Make sure subdirectories are created in ~/tmp
set undodir=~/tmp/.undo//
set backupdir=~/tmp/.backup//
set directory=~/tmp/.swp//

" enable right mouse click functionality
set mousemodel=popup

"--------------------------------------------------------------------------- "
"   NERD Tree Plugin Settings
"--------------------------------------------------------------------------- "
"{{{
""" Toggle NERDTree on and off with F7
nmap <F7> :NERDTreeToggle<CR>

" Close NERDTree with Shift-F7
nmap <S-F7> :NERDTreeClose<CR>
"
" Show the bookmarks table on startup
let NERDTreeShowBookmarks=1
"
" Ignore displaying the following file types in NERDTree
let NERDTreeIgnore=[ '\.ncb$', '\.dummy$', '\.suo$', '\.vcproj\.RIMNET', '\.obj$',
                   \ '\.ilk$', '^BuildLog.htm$', '\.pdb$', '\.idb$',
                   \ '\.embed\.manifest$', '\.embed\.manifest.res$',
                   \  '\.intermediate\.manifest$', '^mt.deps' ]

map,r :NERDTreeFind<CR>
"}}}

" --------------------------------------------------------------------------- " 
"   Powerline settings
" --------------------------------------------------------------------------- "
set rtp+=/usr/local/lib/python2.7/dist-packages/powerline/bindings/vim/
set showtabline=2 " Always display the tabline, even if there is only one tab."

" --------------------------------------------------------------------------- " 
"   syntastic plugin settings
" --------------------------------------------------------------------------- "

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_error_symbol = "✗"
let g:syntastic_warning_symbol = "⚠"
let g:syntastic_python_checkers = ['pep8', 'python', 'flake8', 'python3']

function! SyntasticCheckHook(errors)
	if !empty(a:errors)
		let g:syntastic_loc_list_height = min([len(a:errors), 10])
	endif
endfunction

" --------------------------------------------------------------------------- "
"  vimwiki plugin settings
" --------------------------------------------------------------------------- "
let wiki = {}
let g:vimwikidir = $HOME . "/Dropbox/personal/administrativa/vimwiki"
let wiki.path = g:vimwikidir
let g:vimwiki_list=[wiki]

" --------------------------------------------------------------------------- "
"  VimSession plugin settings
" --------------------------------------------------------------------------- "
let g:session_autosave = 'yes'
let g:session_autosave_periodic = 30

" --------------------------------------------------------------------------- "
"  pymode plugin settings
" --------------------------------------------------------------------------- "
let g:pymode_python = 'python3'

" load NerdFont
set guifont=DroidSansMono\ Nerd\ Font\ 11
let g:webdevicons_enable = 1
let g:webdevicons_enable_nerdtree = 1

" Use the below highlight group when displaying bad whitespace is desired.
highlight BadWhitespace ctermbg=red guibg=red
" Display tabs at the beginning of a line in Python mode as bad.
au BufRead,BufNewFile *.py,*.pyw match BadWhitespace /^\t\+/
" Make trailing whitespace be flagged as bad.
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

set clipboard=unnamedplus"

" Clear filter when using the browse dialog
autocmd FileType * let b:browsefilter = ''

let g:session_autoload='yes'
