" -------------------------------------------------------------------------- "
"
" Name: .vimrc 
" Purpose: Set vim configuration
" Requirements:
"
" Version: 1.12
" Author: Kevin Bowen kevin.bowen@gmail.com
" 
" Updated: 20190731
"
" -------------------------------------------------------------------------- #
"
"
"
set nocompatible
" Don't persist options and mappings because it can corrupt sessions.
set sessionoptions-=options
set undofile

" Switch syntax highlighting on
let python_highlight_all=1
set encoding=utf-8
set t_Co=256

" Set statusline with powerline and syntastic plugins
set rtp+=/usr/local/lib/python2.7/dist-packages/powerline/bindings/vim/
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%{FugitiveStatusline()}
set statusline+=%*
set showtabline=2 " Always display the tabline, even if there is only one tab.
 
" Enable file type detection and do language-dependent indenting.
filetype off
execute pathogen#infect()
call pathogen#helptags()
filetype plugin indent on
syntax on

" map the escape sequences to their Alt combinations.
let c='a'
while c <= 'z'
  exec "set <A-".c.">=\e".c
  exec "imap \e".c." <A-".c.">"
  let c = nr2char(1+char2nr(c))
endw

set timeout ttimeoutlen=50

" Add a marker (the $) at the end of change.
" set cpoptions+=$

colorscheme anotherdark

" Appearance
set relativenumber
set laststatus=2
set wrap
set linebreak
set textwidth=79
set colorcolumn=80
" set title

" Behavior
set backspace=indent,eol,start
set history=50
set incsearch
set hlsearch
set fileformat=unix

" Indentation
set autoindent
set tabstop=4
set shiftwidth=4
set softtabstop=4
set noexpandtab

" Folding
set foldmethod=marker
nnoremap <space> za

" Use the below highlight group when displaying bad whitespace is desired.
highlight BadWhitespace ctermbg=red guibg=red
" Display tabs at the beginning of a line in Python mode as bad.
au BufRead,BufNewFile *.py,*.pyw match BadWhitespace /^\t\+/
" Make trailing whitespace be flagged as bad.
 au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

" Tab-completion in command-line mode
set wildmode=full
set wildmenu

" Disable the arrow keys in normal and insert mode. Leave for visual mode.
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

"------------------------------------------"
"   NERD Tree Plugin Settings
"------------------------------------------"
""" Toggle the NERD Tree on and off with F7
nmap <F7> :NERDTreeToggle<CR>

""" Close the NERD Tree with Shift-F7
nmap <S-F7> :NERDTreeClose<CR>

" Show the bookmarks table on startup
let NERDTreeShowBookmarks=1

" Don't display these kinds of files
let NERDTreeIgnore=[ '\.ncb$', '\.dummy$' ]

map,r :NERDTreeFind<CR>

" -----------------------------------------" 
"   syntastic plugin settings
" -----------------------------------------"
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_error_symbol = "✗"
let g:syntastic_warning_symbol = "⚠"
let g:syntastic_python_checkers = ['pep8', 'python']
" see :h syntastic-loclist-callback
function! SyntasticCheckHook(errors)
	if !empty(a:errors)
		let g:syntastic_loc_list_height = min([len(a:errors), 10])
	endif
endfunction

" ----------------------------------------"
"  vimwiki plugin settings
" ----------------------------------------"
let wiki = {}
let g:vimwikidir = $HOME . "/Dropbox/personal/administrativa/vimwiki"
let wiki.path = g:vimwikidir
let g:vimwiki_list=[wiki]

" ---------------------------------------"
"  VimSession plugin settings
" ---------------------------------------"
let g:session_autosave = 'yes'
let g:session_autosave_periodic = 10

" Mappings to move lines.
" nnoremap <C-j> :m .+1<CR>==
" nnoremap <C-k> :m .-2<CR>==
" inoremap <C-j> <Esc>:m .+1<CR>==gi
" inoremap <C-k> <Esc>:m .-2<CR>==gi
" vnoremap <C-j> :m '>+1<CR>gv=gv
" vnoremap <C-k> :m '<-2<CR>gv=gv

" Ctrl-j/k deletes blank line below/above, and Alt-j/k inserts.
nnoremap <silent><C-j> m`:silent +g/\m^\s*$/d<CR>``:noh<CR>
nnoremap <silent><C-k> m`:silent -g/\m^\s*$/d<CR>``:noh<CR>
nnoremap <silent><A-j> :set paste<CR>m`o<Esc>``:set nopaste<CR>
nnoremap <silent><A-k> :set paste<CR>m`O<Esc>``:set nopaste<CR>

" temp file locations. make sure subdirectories are created in ~/tmp
set undodir=~/tmp/.undo//
set backupdir=~/tmp/.backup//
set directory=~/tmp/.swp//

" load NerdFont
set guifont=DroidSansMono\ Nerd\ Font\ 11
let g:webdevicons_enable = 1
let g:webdevicons_enable_nerdtree = 1
"
" fix for CVE-2019-12735
set modelines=0
set nomodeline
